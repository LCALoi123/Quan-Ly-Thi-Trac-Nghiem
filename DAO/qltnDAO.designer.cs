#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLTN")]
	public partial class qltnDAODataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertCauHoi(CauHoi instance);
    partial void UpdateCauHoi(CauHoi instance);
    partial void DeleteCauHoi(CauHoi instance);
    partial void InsertCauHoiDongGop(CauHoiDongGop instance);
    partial void UpdateCauHoiDongGop(CauHoiDongGop instance);
    partial void DeleteCauHoiDongGop(CauHoiDongGop instance);
    partial void InsertCT_DeThi(CT_DeThi instance);
    partial void UpdateCT_DeThi(CT_DeThi instance);
    partial void DeleteCT_DeThi(CT_DeThi instance);
    partial void InsertCT_HOCSINH_KYTHI(CT_HOCSINH_KYTHI instance);
    partial void UpdateCT_HOCSINH_KYTHI(CT_HOCSINH_KYTHI instance);
    partial void DeleteCT_HOCSINH_KYTHI(CT_HOCSINH_KYTHI instance);
    partial void InsertCT_HOCSINH_KyThiThu(CT_HOCSINH_KyThiThu instance);
    partial void UpdateCT_HOCSINH_KyThiThu(CT_HOCSINH_KyThiThu instance);
    partial void DeleteCT_HOCSINH_KyThiThu(CT_HOCSINH_KyThiThu instance);
    partial void InsertCT_KyThi(CT_KyThi instance);
    partial void UpdateCT_KyThi(CT_KyThi instance);
    partial void DeleteCT_KyThi(CT_KyThi instance);
    partial void InsertCT_KyThiThu(CT_KyThiThu instance);
    partial void UpdateCT_KyThiThu(CT_KyThiThu instance);
    partial void DeleteCT_KyThiThu(CT_KyThiThu instance);
    partial void InsertDeThi(DeThi instance);
    partial void UpdateDeThi(DeThi instance);
    partial void DeleteDeThi(DeThi instance);
    partial void InsertDiemThi(DiemThi instance);
    partial void UpdateDiemThi(DiemThi instance);
    partial void DeleteDiemThi(DiemThi instance);
    partial void InsertGiaoVien(GiaoVien instance);
    partial void UpdateGiaoVien(GiaoVien instance);
    partial void DeleteGiaoVien(GiaoVien instance);
    partial void InsertHocSinh(HocSinh instance);
    partial void UpdateHocSinh(HocSinh instance);
    partial void DeleteHocSinh(HocSinh instance);
    partial void InsertKyThi(KyThi instance);
    partial void UpdateKyThi(KyThi instance);
    partial void DeleteKyThi(KyThi instance);
    partial void InsertKyThiThu(KyThiThu instance);
    partial void UpdateKyThiThu(KyThiThu instance);
    partial void DeleteKyThiThu(KyThiThu instance);
    #endregion
		
		public qltnDAODataContext() : 
				base(global::DAO.Properties.Settings.Default.QLTNConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public qltnDAODataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qltnDAODataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qltnDAODataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qltnDAODataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<CauHoi> CauHois
		{
			get
			{
				return this.GetTable<CauHoi>();
			}
		}
		
		public System.Data.Linq.Table<CauHoiDongGop> CauHoiDongGops
		{
			get
			{
				return this.GetTable<CauHoiDongGop>();
			}
		}
		
		public System.Data.Linq.Table<CT_DeThi> CT_DeThis
		{
			get
			{
				return this.GetTable<CT_DeThi>();
			}
		}
		
		public System.Data.Linq.Table<CT_HOCSINH_KYTHI> CT_HOCSINH_KYTHIs
		{
			get
			{
				return this.GetTable<CT_HOCSINH_KYTHI>();
			}
		}
		
		public System.Data.Linq.Table<CT_HOCSINH_KyThiThu> CT_HOCSINH_KyThiThus
		{
			get
			{
				return this.GetTable<CT_HOCSINH_KyThiThu>();
			}
		}
		
		public System.Data.Linq.Table<CT_KyThi> CT_KyThis
		{
			get
			{
				return this.GetTable<CT_KyThi>();
			}
		}
		
		public System.Data.Linq.Table<CT_KyThiThu> CT_KyThiThus
		{
			get
			{
				return this.GetTable<CT_KyThiThu>();
			}
		}
		
		public System.Data.Linq.Table<DeThi> DeThis
		{
			get
			{
				return this.GetTable<DeThi>();
			}
		}
		
		public System.Data.Linq.Table<DiemThi> DiemThis
		{
			get
			{
				return this.GetTable<DiemThi>();
			}
		}
		
		public System.Data.Linq.Table<GiaoVien> GiaoViens
		{
			get
			{
				return this.GetTable<GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh> HocSinhs
		{
			get
			{
				return this.GetTable<HocSinh>();
			}
		}
		
		public System.Data.Linq.Table<KyThi> KyThis
		{
			get
			{
				return this.GetTable<KyThi>();
			}
		}
		
		public System.Data.Linq.Table<KyThiThu> KyThiThus
		{
			get
			{
				return this.GetTable<KyThiThu>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _usName;
		
		private string _PassWord;
		
		private string _PhanHe;
		
		private EntitySet<Admin> _Admins;
		
		private EntitySet<GiaoVien> _GiaoViens;
		
		private EntitySet<HocSinh> _HocSinhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnusNameChanging(string value);
    partial void OnusNameChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    partial void OnPhanHeChanging(string value);
    partial void OnPhanHeChanged();
    #endregion
		
		public Account()
		{
			this._Admins = new EntitySet<Admin>(new Action<Admin>(this.attach_Admins), new Action<Admin>(this.detach_Admins));
			this._GiaoViens = new EntitySet<GiaoVien>(new Action<GiaoVien>(this.attach_GiaoViens), new Action<GiaoVien>(this.detach_GiaoViens));
			this._HocSinhs = new EntitySet<HocSinh>(new Action<HocSinh>(this.attach_HocSinhs), new Action<HocSinh>(this.detach_HocSinhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string usName
		{
			get
			{
				return this._usName;
			}
			set
			{
				if ((this._usName != value))
				{
					this.OnusNameChanging(value);
					this.SendPropertyChanging();
					this._usName = value;
					this.SendPropertyChanged("usName");
					this.OnusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanHe", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PhanHe
		{
			get
			{
				return this._PhanHe;
			}
			set
			{
				if ((this._PhanHe != value))
				{
					this.OnPhanHeChanging(value);
					this.SendPropertyChanging();
					this._PhanHe = value;
					this.SendPropertyChanged("PhanHe");
					this.OnPhanHeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Admin", Storage="_Admins", ThisKey="ID", OtherKey="IDus")]
		public EntitySet<Admin> Admins
		{
			get
			{
				return this._Admins;
			}
			set
			{
				this._Admins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_GiaoVien", Storage="_GiaoViens", ThisKey="ID", OtherKey="IDus")]
		public EntitySet<GiaoVien> GiaoViens
		{
			get
			{
				return this._GiaoViens;
			}
			set
			{
				this._GiaoViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_HocSinh", Storage="_HocSinhs", ThisKey="ID", OtherKey="IDus")]
		public EntitySet<HocSinh> HocSinhs
		{
			get
			{
				return this._HocSinhs;
			}
			set
			{
				this._HocSinhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Admins(Admin entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Admins(Admin entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDus;
		
		private int _IDadmin;
		
		private string _UsName;
		
		private string _HoTen;
		
		private System.DateTime _NgaySinh;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDusChanging(int value);
    partial void OnIDusChanged();
    partial void OnIDadminChanging(int value);
    partial void OnIDadminChanged();
    partial void OnUsNameChanging(string value);
    partial void OnUsNameChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    #endregion
		
		public Admin()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDus", DbType="Int NOT NULL")]
		public int IDus
		{
			get
			{
				return this._IDus;
			}
			set
			{
				if ((this._IDus != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDusChanging(value);
					this.SendPropertyChanging();
					this._IDus = value;
					this.SendPropertyChanged("IDus");
					this.OnIDusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDadmin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDadmin
		{
			get
			{
				return this._IDadmin;
			}
			set
			{
				if ((this._IDadmin != value))
				{
					this.OnIDadminChanging(value);
					this.SendPropertyChanging();
					this._IDadmin = value;
					this.SendPropertyChanged("IDadmin");
					this.OnIDadminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsName", CanBeNull=false)]
		public string UsName
		{
			get
			{
				return this._UsName;
			}
			set
			{
				if ((this._UsName != value))
				{
					this.OnUsNameChanging(value);
					this.SendPropertyChanging();
					this._UsName = value;
					this.SendPropertyChanged("UsName");
					this.OnUsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Admin", Storage="_Account", ThisKey="IDus", OtherKey="ID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Admins.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Admins.Add(this);
						this._IDus = value.ID;
					}
					else
					{
						this._IDus = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHoi")]
	public partial class CauHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDch;
		
		private string _CauHoi1;
		
		private string _dapanA;
		
		private string _dapanB;
		
		private string _dapanC;
		
		private string _dapanD;
		
		private string _dapandung;
		
		private int _DoKho;
		
		private EntitySet<CT_DeThi> _CT_DeThis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDchChanging(int value);
    partial void OnIDchChanged();
    partial void OnCauHoi1Changing(string value);
    partial void OnCauHoi1Changed();
    partial void OndapanAChanging(string value);
    partial void OndapanAChanged();
    partial void OndapanBChanging(string value);
    partial void OndapanBChanged();
    partial void OndapanCChanging(string value);
    partial void OndapanCChanged();
    partial void OndapanDChanging(string value);
    partial void OndapanDChanged();
    partial void OndapandungChanging(string value);
    partial void OndapandungChanged();
    partial void OnDoKhoChanging(int value);
    partial void OnDoKhoChanged();
    #endregion
		
		public CauHoi()
		{
			this._CT_DeThis = new EntitySet<CT_DeThi>(new Action<CT_DeThi>(this.attach_CT_DeThis), new Action<CT_DeThi>(this.detach_CT_DeThis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDch", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDch
		{
			get
			{
				return this._IDch;
			}
			set
			{
				if ((this._IDch != value))
				{
					this.OnIDchChanging(value);
					this.SendPropertyChanging();
					this._IDch = value;
					this.SendPropertyChanged("IDch");
					this.OnIDchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CauHoi", Storage="_CauHoi1", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string CauHoi1
		{
			get
			{
				return this._CauHoi1;
			}
			set
			{
				if ((this._CauHoi1 != value))
				{
					this.OnCauHoi1Changing(value);
					this.SendPropertyChanging();
					this._CauHoi1 = value;
					this.SendPropertyChanged("CauHoi1");
					this.OnCauHoi1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dapanA", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string dapanA
		{
			get
			{
				return this._dapanA;
			}
			set
			{
				if ((this._dapanA != value))
				{
					this.OndapanAChanging(value);
					this.SendPropertyChanging();
					this._dapanA = value;
					this.SendPropertyChanged("dapanA");
					this.OndapanAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dapanB", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string dapanB
		{
			get
			{
				return this._dapanB;
			}
			set
			{
				if ((this._dapanB != value))
				{
					this.OndapanBChanging(value);
					this.SendPropertyChanging();
					this._dapanB = value;
					this.SendPropertyChanged("dapanB");
					this.OndapanBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dapanC", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string dapanC
		{
			get
			{
				return this._dapanC;
			}
			set
			{
				if ((this._dapanC != value))
				{
					this.OndapanCChanging(value);
					this.SendPropertyChanging();
					this._dapanC = value;
					this.SendPropertyChanged("dapanC");
					this.OndapanCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dapanD", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string dapanD
		{
			get
			{
				return this._dapanD;
			}
			set
			{
				if ((this._dapanD != value))
				{
					this.OndapanDChanging(value);
					this.SendPropertyChanging();
					this._dapanD = value;
					this.SendPropertyChanged("dapanD");
					this.OndapanDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dapandung", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string dapandung
		{
			get
			{
				return this._dapandung;
			}
			set
			{
				if ((this._dapandung != value))
				{
					this.OndapandungChanging(value);
					this.SendPropertyChanging();
					this._dapandung = value;
					this.SendPropertyChanged("dapandung");
					this.OndapandungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoKho", DbType="Int NOT NULL")]
		public int DoKho
		{
			get
			{
				return this._DoKho;
			}
			set
			{
				if ((this._DoKho != value))
				{
					this.OnDoKhoChanging(value);
					this.SendPropertyChanging();
					this._DoKho = value;
					this.SendPropertyChanged("DoKho");
					this.OnDoKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_CT_DeThi", Storage="_CT_DeThis", ThisKey="IDch", OtherKey="IDch")]
		public EntitySet<CT_DeThi> CT_DeThis
		{
			get
			{
				return this._CT_DeThis;
			}
			set
			{
				this._CT_DeThis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DeThis(CT_DeThi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = this;
		}
		
		private void detach_CT_DeThis(CT_DeThi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHoiDongGop")]
	public partial class CauHoiDongGop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDch;
		
		private System.Nullable<int> _IDhs;
		
		private string _CauHoi;
		
		private string _dapanA;
		
		private string _dapanB;
		
		private string _dapanC;
		
		private string _dapanD;
		
		private string _dapandung;
		
		private int _DoKho;
		
		private bool _duyet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDchChanging(int value);
    partial void OnIDchChanged();
    partial void OnIDhsChanging(System.Nullable<int> value);
    partial void OnIDhsChanged();
    partial void OnCauHoiChanging(string value);
    partial void OnCauHoiChanged();
    partial void OndapanAChanging(string value);
    partial void OndapanAChanged();
    partial void OndapanBChanging(string value);
    partial void OndapanBChanged();
    partial void OndapanCChanging(string value);
    partial void OndapanCChanged();
    partial void OndapanDChanging(string value);
    partial void OndapanDChanged();
    partial void OndapandungChanging(string value);
    partial void OndapandungChanged();
    partial void OnDoKhoChanging(int value);
    partial void OnDoKhoChanged();
    partial void OnduyetChanging(bool value);
    partial void OnduyetChanged();
    #endregion
		
		public CauHoiDongGop()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDch", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDch
		{
			get
			{
				return this._IDch;
			}
			set
			{
				if ((this._IDch != value))
				{
					this.OnIDchChanging(value);
					this.SendPropertyChanging();
					this._IDch = value;
					this.SendPropertyChanged("IDch");
					this.OnIDchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDhs", DbType="Int")]
		public System.Nullable<int> IDhs
		{
			get
			{
				return this._IDhs;
			}
			set
			{
				if ((this._IDhs != value))
				{
					this.OnIDhsChanging(value);
					this.SendPropertyChanging();
					this._IDhs = value;
					this.SendPropertyChanged("IDhs");
					this.OnIDhsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauHoi", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string CauHoi
		{
			get
			{
				return this._CauHoi;
			}
			set
			{
				if ((this._CauHoi != value))
				{
					this.OnCauHoiChanging(value);
					this.SendPropertyChanging();
					this._CauHoi = value;
					this.SendPropertyChanged("CauHoi");
					this.OnCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dapanA", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string dapanA
		{
			get
			{
				return this._dapanA;
			}
			set
			{
				if ((this._dapanA != value))
				{
					this.OndapanAChanging(value);
					this.SendPropertyChanging();
					this._dapanA = value;
					this.SendPropertyChanged("dapanA");
					this.OndapanAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dapanB", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string dapanB
		{
			get
			{
				return this._dapanB;
			}
			set
			{
				if ((this._dapanB != value))
				{
					this.OndapanBChanging(value);
					this.SendPropertyChanging();
					this._dapanB = value;
					this.SendPropertyChanged("dapanB");
					this.OndapanBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dapanC", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string dapanC
		{
			get
			{
				return this._dapanC;
			}
			set
			{
				if ((this._dapanC != value))
				{
					this.OndapanCChanging(value);
					this.SendPropertyChanging();
					this._dapanC = value;
					this.SendPropertyChanged("dapanC");
					this.OndapanCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dapanD", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string dapanD
		{
			get
			{
				return this._dapanD;
			}
			set
			{
				if ((this._dapanD != value))
				{
					this.OndapanDChanging(value);
					this.SendPropertyChanging();
					this._dapanD = value;
					this.SendPropertyChanged("dapanD");
					this.OndapanDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dapandung", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string dapandung
		{
			get
			{
				return this._dapandung;
			}
			set
			{
				if ((this._dapandung != value))
				{
					this.OndapandungChanging(value);
					this.SendPropertyChanging();
					this._dapandung = value;
					this.SendPropertyChanged("dapandung");
					this.OndapandungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoKho", DbType="Int NOT NULL")]
		public int DoKho
		{
			get
			{
				return this._DoKho;
			}
			set
			{
				if ((this._DoKho != value))
				{
					this.OnDoKhoChanging(value);
					this.SendPropertyChanging();
					this._DoKho = value;
					this.SendPropertyChanged("DoKho");
					this.OnDoKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duyet", DbType="Bit NOT NULL")]
		public bool duyet
		{
			get
			{
				return this._duyet;
			}
			set
			{
				if ((this._duyet != value))
				{
					this.OnduyetChanging(value);
					this.SendPropertyChanging();
					this._duyet = value;
					this.SendPropertyChanged("duyet");
					this.OnduyetChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DeThi")]
	public partial class CT_DeThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDe;
		
		private int _IDch;
		
		private EntityRef<CauHoi> _CauHoi;
		
		private EntityRef<DeThi> _DeThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    partial void OnIDchChanging(int value);
    partial void OnIDchChanged();
    #endregion
		
		public CT_DeThi()
		{
			this._CauHoi = default(EntityRef<CauHoi>);
			this._DeThi = default(EntityRef<DeThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDch", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDch
		{
			get
			{
				return this._IDch;
			}
			set
			{
				if ((this._IDch != value))
				{
					if (this._CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDchChanging(value);
					this.SendPropertyChanging();
					this._IDch = value;
					this.SendPropertyChanged("IDch");
					this.OnIDchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_CT_DeThi", Storage="_CauHoi", ThisKey="IDch", OtherKey="IDch", IsForeignKey=true)]
		public CauHoi CauHoi
		{
			get
			{
				return this._CauHoi.Entity;
			}
			set
			{
				CauHoi previousValue = this._CauHoi.Entity;
				if (((previousValue != value) 
							|| (this._CauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHoi.Entity = null;
						previousValue.CT_DeThis.Remove(this);
					}
					this._CauHoi.Entity = value;
					if ((value != null))
					{
						value.CT_DeThis.Add(this);
						this._IDch = value.IDch;
					}
					else
					{
						this._IDch = default(int);
					}
					this.SendPropertyChanged("CauHoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_CT_DeThi", Storage="_DeThi", ThisKey="MaDe", OtherKey="MaDe", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.CT_DeThis.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.CT_DeThis.Add(this);
						this._MaDe = value.MaDe;
					}
					else
					{
						this._MaDe = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_HOCSINH_KYTHI")]
	public partial class CT_HOCSINH_KYTHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKyThi;
		
		private int _IDhs;
		
		private EntityRef<HocSinh> _HocSinh;
		
		private EntityRef<KyThi> _KyThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKyThiChanging(string value);
    partial void OnMaKyThiChanged();
    partial void OnIDhsChanging(int value);
    partial void OnIDhsChanged();
    #endregion
		
		public CT_HOCSINH_KYTHI()
		{
			this._HocSinh = default(EntityRef<HocSinh>);
			this._KyThi = default(EntityRef<KyThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKyThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKyThi
		{
			get
			{
				return this._MaKyThi;
			}
			set
			{
				if ((this._MaKyThi != value))
				{
					if (this._KyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKyThiChanging(value);
					this.SendPropertyChanging();
					this._MaKyThi = value;
					this.SendPropertyChanged("MaKyThi");
					this.OnMaKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDhs", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDhs
		{
			get
			{
				return this._IDhs;
			}
			set
			{
				if ((this._IDhs != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDhsChanging(value);
					this.SendPropertyChanging();
					this._IDhs = value;
					this.SendPropertyChanged("IDhs");
					this.OnIDhsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_CT_HOCSINH_KYTHI", Storage="_HocSinh", ThisKey="IDhs", OtherKey="IDhs", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.CT_HOCSINH_KYTHIs.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.CT_HOCSINH_KYTHIs.Add(this);
						this._IDhs = value.IDhs;
					}
					else
					{
						this._IDhs = default(int);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_CT_HOCSINH_KYTHI", Storage="_KyThi", ThisKey="MaKyThi", OtherKey="MaKyThi", IsForeignKey=true)]
		public KyThi KyThi
		{
			get
			{
				return this._KyThi.Entity;
			}
			set
			{
				KyThi previousValue = this._KyThi.Entity;
				if (((previousValue != value) 
							|| (this._KyThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KyThi.Entity = null;
						previousValue.CT_HOCSINH_KYTHIs.Remove(this);
					}
					this._KyThi.Entity = value;
					if ((value != null))
					{
						value.CT_HOCSINH_KYTHIs.Add(this);
						this._MaKyThi = value.MaKyThi;
					}
					else
					{
						this._MaKyThi = default(string);
					}
					this.SendPropertyChanged("KyThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_HOCSINH_KyThiThu")]
	public partial class CT_HOCSINH_KyThiThu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKyThi;
		
		private int _IDhs;
		
		private EntityRef<HocSinh> _HocSinh;
		
		private EntityRef<KyThiThu> _KyThiThu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKyThiChanging(string value);
    partial void OnMaKyThiChanged();
    partial void OnIDhsChanging(int value);
    partial void OnIDhsChanged();
    #endregion
		
		public CT_HOCSINH_KyThiThu()
		{
			this._HocSinh = default(EntityRef<HocSinh>);
			this._KyThiThu = default(EntityRef<KyThiThu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKyThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKyThi
		{
			get
			{
				return this._MaKyThi;
			}
			set
			{
				if ((this._MaKyThi != value))
				{
					if (this._KyThiThu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKyThiChanging(value);
					this.SendPropertyChanging();
					this._MaKyThi = value;
					this.SendPropertyChanged("MaKyThi");
					this.OnMaKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDhs", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDhs
		{
			get
			{
				return this._IDhs;
			}
			set
			{
				if ((this._IDhs != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDhsChanging(value);
					this.SendPropertyChanging();
					this._IDhs = value;
					this.SendPropertyChanged("IDhs");
					this.OnIDhsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_CT_HOCSINH_KyThiThu", Storage="_HocSinh", ThisKey="IDhs", OtherKey="IDhs", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.CT_HOCSINH_KyThiThus.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.CT_HOCSINH_KyThiThus.Add(this);
						this._IDhs = value.IDhs;
					}
					else
					{
						this._IDhs = default(int);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThiThu_CT_HOCSINH_KyThiThu", Storage="_KyThiThu", ThisKey="MaKyThi", OtherKey="MaKyThi", IsForeignKey=true)]
		public KyThiThu KyThiThu
		{
			get
			{
				return this._KyThiThu.Entity;
			}
			set
			{
				KyThiThu previousValue = this._KyThiThu.Entity;
				if (((previousValue != value) 
							|| (this._KyThiThu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KyThiThu.Entity = null;
						previousValue.CT_HOCSINH_KyThiThus.Remove(this);
					}
					this._KyThiThu.Entity = value;
					if ((value != null))
					{
						value.CT_HOCSINH_KyThiThus.Add(this);
						this._MaKyThi = value.MaKyThi;
					}
					else
					{
						this._MaKyThi = default(string);
					}
					this.SendPropertyChanged("KyThiThu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_KyThi")]
	public partial class CT_KyThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKyThi;
		
		private string _MaDe;
		
		private EntitySet<DiemThi> _DiemThis;
		
		private EntityRef<DeThi> _DeThi;
		
		private EntityRef<KyThi> _KyThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKyThiChanging(string value);
    partial void OnMaKyThiChanged();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    #endregion
		
		public CT_KyThi()
		{
			this._DiemThis = new EntitySet<DiemThi>(new Action<DiemThi>(this.attach_DiemThis), new Action<DiemThi>(this.detach_DiemThis));
			this._DeThi = default(EntityRef<DeThi>);
			this._KyThi = default(EntityRef<KyThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKyThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKyThi
		{
			get
			{
				return this._MaKyThi;
			}
			set
			{
				if ((this._MaKyThi != value))
				{
					if (this._KyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKyThiChanging(value);
					this.SendPropertyChanging();
					this._MaKyThi = value;
					this.SendPropertyChanged("MaKyThi");
					this.OnMaKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CT_KyThi_DiemThi", Storage="_DiemThis", ThisKey="MaKyThi,MaDe", OtherKey="MaKyThi,MaDe")]
		public EntitySet<DiemThi> DiemThis
		{
			get
			{
				return this._DiemThis;
			}
			set
			{
				this._DiemThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_CT_KyThi", Storage="_DeThi", ThisKey="MaDe", OtherKey="MaDe", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.CT_KyThis.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.CT_KyThis.Add(this);
						this._MaDe = value.MaDe;
					}
					else
					{
						this._MaDe = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_CT_KyThi", Storage="_KyThi", ThisKey="MaKyThi", OtherKey="MaKyThi", IsForeignKey=true)]
		public KyThi KyThi
		{
			get
			{
				return this._KyThi.Entity;
			}
			set
			{
				KyThi previousValue = this._KyThi.Entity;
				if (((previousValue != value) 
							|| (this._KyThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KyThi.Entity = null;
						previousValue.CT_KyThis.Remove(this);
					}
					this._KyThi.Entity = value;
					if ((value != null))
					{
						value.CT_KyThis.Add(this);
						this._MaKyThi = value.MaKyThi;
					}
					else
					{
						this._MaKyThi = default(string);
					}
					this.SendPropertyChanged("KyThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiemThis(DiemThi entity)
		{
			this.SendPropertyChanging();
			entity.CT_KyThi = this;
		}
		
		private void detach_DiemThis(DiemThi entity)
		{
			this.SendPropertyChanging();
			entity.CT_KyThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_KyThiThu")]
	public partial class CT_KyThiThu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKyThi;
		
		private string _MaDe;
		
		private EntityRef<DeThi> _DeThi;
		
		private EntityRef<KyThiThu> _KyThiThu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKyThiChanging(string value);
    partial void OnMaKyThiChanged();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    #endregion
		
		public CT_KyThiThu()
		{
			this._DeThi = default(EntityRef<DeThi>);
			this._KyThiThu = default(EntityRef<KyThiThu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKyThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKyThi
		{
			get
			{
				return this._MaKyThi;
			}
			set
			{
				if ((this._MaKyThi != value))
				{
					if (this._KyThiThu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKyThiChanging(value);
					this.SendPropertyChanging();
					this._MaKyThi = value;
					this.SendPropertyChanged("MaKyThi");
					this.OnMaKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_CT_KyThiThu", Storage="_DeThi", ThisKey="MaDe", OtherKey="MaDe", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.CT_KyThiThus.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.CT_KyThiThus.Add(this);
						this._MaDe = value.MaDe;
					}
					else
					{
						this._MaDe = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThiThu_CT_KyThiThu", Storage="_KyThiThu", ThisKey="MaKyThi", OtherKey="MaKyThi", IsForeignKey=true)]
		public KyThiThu KyThiThu
		{
			get
			{
				return this._KyThiThu.Entity;
			}
			set
			{
				KyThiThu previousValue = this._KyThiThu.Entity;
				if (((previousValue != value) 
							|| (this._KyThiThu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KyThiThu.Entity = null;
						previousValue.CT_KyThiThus.Remove(this);
					}
					this._KyThiThu.Entity = value;
					if ((value != null))
					{
						value.CT_KyThiThus.Add(this);
						this._MaKyThi = value.MaKyThi;
					}
					else
					{
						this._MaKyThi = default(string);
					}
					this.SendPropertyChanged("KyThiThu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeThi")]
	public partial class DeThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDe;
		
		private string _TenDe;
		
		private EntitySet<CT_DeThi> _CT_DeThis;
		
		private EntitySet<CT_KyThi> _CT_KyThis;
		
		private EntitySet<CT_KyThiThu> _CT_KyThiThus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    partial void OnTenDeChanging(string value);
    partial void OnTenDeChanged();
    #endregion
		
		public DeThi()
		{
			this._CT_DeThis = new EntitySet<CT_DeThi>(new Action<CT_DeThi>(this.attach_CT_DeThis), new Action<CT_DeThi>(this.detach_CT_DeThis));
			this._CT_KyThis = new EntitySet<CT_KyThi>(new Action<CT_KyThi>(this.attach_CT_KyThis), new Action<CT_KyThi>(this.detach_CT_KyThis));
			this._CT_KyThiThus = new EntitySet<CT_KyThiThu>(new Action<CT_KyThiThu>(this.attach_CT_KyThiThus), new Action<CT_KyThiThu>(this.detach_CT_KyThiThus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDe", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenDe
		{
			get
			{
				return this._TenDe;
			}
			set
			{
				if ((this._TenDe != value))
				{
					this.OnTenDeChanging(value);
					this.SendPropertyChanging();
					this._TenDe = value;
					this.SendPropertyChanged("TenDe");
					this.OnTenDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_CT_DeThi", Storage="_CT_DeThis", ThisKey="MaDe", OtherKey="MaDe")]
		public EntitySet<CT_DeThi> CT_DeThis
		{
			get
			{
				return this._CT_DeThis;
			}
			set
			{
				this._CT_DeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_CT_KyThi", Storage="_CT_KyThis", ThisKey="MaDe", OtherKey="MaDe")]
		public EntitySet<CT_KyThi> CT_KyThis
		{
			get
			{
				return this._CT_KyThis;
			}
			set
			{
				this._CT_KyThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_CT_KyThiThu", Storage="_CT_KyThiThus", ThisKey="MaDe", OtherKey="MaDe")]
		public EntitySet<CT_KyThiThu> CT_KyThiThus
		{
			get
			{
				return this._CT_KyThiThus;
			}
			set
			{
				this._CT_KyThiThus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DeThis(CT_DeThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_CT_DeThis(CT_DeThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
		
		private void attach_CT_KyThis(CT_KyThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_CT_KyThis(CT_KyThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
		
		private void attach_CT_KyThiThus(CT_KyThiThu entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_CT_KyThiThus(CT_KyThiThu entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiemThi")]
	public partial class DiemThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKyThi;
		
		private string _MaDe;
		
		private int _IDhs;
		
		private double _Diem;
		
		private EntityRef<CT_KyThi> _CT_KyThi;
		
		private EntityRef<HocSinh> _HocSinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKyThiChanging(string value);
    partial void OnMaKyThiChanged();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    partial void OnIDhsChanging(int value);
    partial void OnIDhsChanged();
    partial void OnDiemChanging(double value);
    partial void OnDiemChanged();
    #endregion
		
		public DiemThi()
		{
			this._CT_KyThi = default(EntityRef<CT_KyThi>);
			this._HocSinh = default(EntityRef<HocSinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKyThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKyThi
		{
			get
			{
				return this._MaKyThi;
			}
			set
			{
				if ((this._MaKyThi != value))
				{
					if (this._CT_KyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKyThiChanging(value);
					this.SendPropertyChanging();
					this._MaKyThi = value;
					this.SendPropertyChanged("MaKyThi");
					this.OnMaKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					if (this._CT_KyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDhs", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDhs
		{
			get
			{
				return this._IDhs;
			}
			set
			{
				if ((this._IDhs != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDhsChanging(value);
					this.SendPropertyChanging();
					this._IDhs = value;
					this.SendPropertyChanged("IDhs");
					this.OnIDhsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Float NOT NULL")]
		public double Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CT_KyThi_DiemThi", Storage="_CT_KyThi", ThisKey="MaKyThi,MaDe", OtherKey="MaKyThi,MaDe", IsForeignKey=true)]
		public CT_KyThi CT_KyThi
		{
			get
			{
				return this._CT_KyThi.Entity;
			}
			set
			{
				CT_KyThi previousValue = this._CT_KyThi.Entity;
				if (((previousValue != value) 
							|| (this._CT_KyThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CT_KyThi.Entity = null;
						previousValue.DiemThis.Remove(this);
					}
					this._CT_KyThi.Entity = value;
					if ((value != null))
					{
						value.DiemThis.Add(this);
						this._MaKyThi = value.MaKyThi;
						this._MaDe = value.MaDe;
					}
					else
					{
						this._MaKyThi = default(string);
						this._MaDe = default(string);
					}
					this.SendPropertyChanged("CT_KyThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_DiemThi", Storage="_HocSinh", ThisKey="IDhs", OtherKey="IDhs", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.DiemThis.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.DiemThis.Add(this);
						this._IDhs = value.IDhs;
					}
					else
					{
						this._IDhs = default(int);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoVien")]
	public partial class GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDgv;
		
		private string _TenGV;
		
		private int _IDus;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDgvChanging(int value);
    partial void OnIDgvChanged();
    partial void OnTenGVChanging(string value);
    partial void OnTenGVChanged();
    partial void OnIDusChanging(int value);
    partial void OnIDusChanged();
    #endregion
		
		public GiaoVien()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDgv", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDgv
		{
			get
			{
				return this._IDgv;
			}
			set
			{
				if ((this._IDgv != value))
				{
					this.OnIDgvChanging(value);
					this.SendPropertyChanging();
					this._IDgv = value;
					this.SendPropertyChanged("IDgv");
					this.OnIDgvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenGV
		{
			get
			{
				return this._TenGV;
			}
			set
			{
				if ((this._TenGV != value))
				{
					this.OnTenGVChanging(value);
					this.SendPropertyChanging();
					this._TenGV = value;
					this.SendPropertyChanged("TenGV");
					this.OnTenGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDus", DbType="Int NOT NULL")]
		public int IDus
		{
			get
			{
				return this._IDus;
			}
			set
			{
				if ((this._IDus != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDusChanging(value);
					this.SendPropertyChanging();
					this._IDus = value;
					this.SendPropertyChanged("IDus");
					this.OnIDusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_GiaoVien", Storage="_Account", ThisKey="IDus", OtherKey="ID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.GiaoViens.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.GiaoViens.Add(this);
						this._IDus = value.ID;
					}
					else
					{
						this._IDus = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh")]
	public partial class HocSinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDhs;
		
		private string _TenHS;
		
		private string _Lop;
		
		private string _KhoiLop;
		
		private System.DateTime _NgaySinh;
		
		private int _IDus;
		
		private EntitySet<CT_HOCSINH_KYTHI> _CT_HOCSINH_KYTHIs;
		
		private EntitySet<CT_HOCSINH_KyThiThu> _CT_HOCSINH_KyThiThus;
		
		private EntitySet<DiemThi> _DiemThis;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDhsChanging(int value);
    partial void OnIDhsChanged();
    partial void OnTenHSChanging(string value);
    partial void OnTenHSChanged();
    partial void OnLopChanging(string value);
    partial void OnLopChanged();
    partial void OnKhoiLopChanging(string value);
    partial void OnKhoiLopChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnIDusChanging(int value);
    partial void OnIDusChanged();
    #endregion
		
		public HocSinh()
		{
			this._CT_HOCSINH_KYTHIs = new EntitySet<CT_HOCSINH_KYTHI>(new Action<CT_HOCSINH_KYTHI>(this.attach_CT_HOCSINH_KYTHIs), new Action<CT_HOCSINH_KYTHI>(this.detach_CT_HOCSINH_KYTHIs));
			this._CT_HOCSINH_KyThiThus = new EntitySet<CT_HOCSINH_KyThiThu>(new Action<CT_HOCSINH_KyThiThu>(this.attach_CT_HOCSINH_KyThiThus), new Action<CT_HOCSINH_KyThiThu>(this.detach_CT_HOCSINH_KyThiThus));
			this._DiemThis = new EntitySet<DiemThi>(new Action<DiemThi>(this.attach_DiemThis), new Action<DiemThi>(this.detach_DiemThis));
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDhs", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDhs
		{
			get
			{
				return this._IDhs;
			}
			set
			{
				if ((this._IDhs != value))
				{
					this.OnIDhsChanging(value);
					this.SendPropertyChanging();
					this._IDhs = value;
					this.SendPropertyChanged("IDhs");
					this.OnIDhsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHS", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenHS
		{
			get
			{
				return this._TenHS;
			}
			set
			{
				if ((this._TenHS != value))
				{
					this.OnTenHSChanging(value);
					this.SendPropertyChanging();
					this._TenHS = value;
					this.SendPropertyChanged("TenHS");
					this.OnTenHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lop", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhoiLop", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string KhoiLop
		{
			get
			{
				return this._KhoiLop;
			}
			set
			{
				if ((this._KhoiLop != value))
				{
					this.OnKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._KhoiLop = value;
					this.SendPropertyChanged("KhoiLop");
					this.OnKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDus", DbType="Int NOT NULL")]
		public int IDus
		{
			get
			{
				return this._IDus;
			}
			set
			{
				if ((this._IDus != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDusChanging(value);
					this.SendPropertyChanging();
					this._IDus = value;
					this.SendPropertyChanged("IDus");
					this.OnIDusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_CT_HOCSINH_KYTHI", Storage="_CT_HOCSINH_KYTHIs", ThisKey="IDhs", OtherKey="IDhs")]
		public EntitySet<CT_HOCSINH_KYTHI> CT_HOCSINH_KYTHIs
		{
			get
			{
				return this._CT_HOCSINH_KYTHIs;
			}
			set
			{
				this._CT_HOCSINH_KYTHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_CT_HOCSINH_KyThiThu", Storage="_CT_HOCSINH_KyThiThus", ThisKey="IDhs", OtherKey="IDhs")]
		public EntitySet<CT_HOCSINH_KyThiThu> CT_HOCSINH_KyThiThus
		{
			get
			{
				return this._CT_HOCSINH_KyThiThus;
			}
			set
			{
				this._CT_HOCSINH_KyThiThus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_DiemThi", Storage="_DiemThis", ThisKey="IDhs", OtherKey="IDhs")]
		public EntitySet<DiemThi> DiemThis
		{
			get
			{
				return this._DiemThis;
			}
			set
			{
				this._DiemThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_HocSinh", Storage="_Account", ThisKey="IDus", OtherKey="ID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.HocSinhs.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.HocSinhs.Add(this);
						this._IDus = value.ID;
					}
					else
					{
						this._IDus = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HOCSINH_KYTHIs(CT_HOCSINH_KYTHI entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_CT_HOCSINH_KYTHIs(CT_HOCSINH_KYTHI entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
		
		private void attach_CT_HOCSINH_KyThiThus(CT_HOCSINH_KyThiThu entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_CT_HOCSINH_KyThiThus(CT_HOCSINH_KyThiThu entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
		
		private void attach_DiemThis(DiemThi entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_DiemThis(DiemThi entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KyThi")]
	public partial class KyThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKyThi;
		
		private string _TenKyThi;
		
		private System.DateTime _NgayThi;
		
		private EntitySet<CT_HOCSINH_KYTHI> _CT_HOCSINH_KYTHIs;
		
		private EntitySet<CT_KyThi> _CT_KyThis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKyThiChanging(string value);
    partial void OnMaKyThiChanged();
    partial void OnTenKyThiChanging(string value);
    partial void OnTenKyThiChanged();
    partial void OnNgayThiChanging(System.DateTime value);
    partial void OnNgayThiChanged();
    #endregion
		
		public KyThi()
		{
			this._CT_HOCSINH_KYTHIs = new EntitySet<CT_HOCSINH_KYTHI>(new Action<CT_HOCSINH_KYTHI>(this.attach_CT_HOCSINH_KYTHIs), new Action<CT_HOCSINH_KYTHI>(this.detach_CT_HOCSINH_KYTHIs));
			this._CT_KyThis = new EntitySet<CT_KyThi>(new Action<CT_KyThi>(this.attach_CT_KyThis), new Action<CT_KyThi>(this.detach_CT_KyThis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKyThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKyThi
		{
			get
			{
				return this._MaKyThi;
			}
			set
			{
				if ((this._MaKyThi != value))
				{
					this.OnMaKyThiChanging(value);
					this.SendPropertyChanging();
					this._MaKyThi = value;
					this.SendPropertyChanged("MaKyThi");
					this.OnMaKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKyThi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenKyThi
		{
			get
			{
				return this._TenKyThi;
			}
			set
			{
				if ((this._TenKyThi != value))
				{
					this.OnTenKyThiChanging(value);
					this.SendPropertyChanging();
					this._TenKyThi = value;
					this.SendPropertyChanged("TenKyThi");
					this.OnTenKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThi", DbType="Date NOT NULL")]
		public System.DateTime NgayThi
		{
			get
			{
				return this._NgayThi;
			}
			set
			{
				if ((this._NgayThi != value))
				{
					this.OnNgayThiChanging(value);
					this.SendPropertyChanging();
					this._NgayThi = value;
					this.SendPropertyChanged("NgayThi");
					this.OnNgayThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_CT_HOCSINH_KYTHI", Storage="_CT_HOCSINH_KYTHIs", ThisKey="MaKyThi", OtherKey="MaKyThi")]
		public EntitySet<CT_HOCSINH_KYTHI> CT_HOCSINH_KYTHIs
		{
			get
			{
				return this._CT_HOCSINH_KYTHIs;
			}
			set
			{
				this._CT_HOCSINH_KYTHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_CT_KyThi", Storage="_CT_KyThis", ThisKey="MaKyThi", OtherKey="MaKyThi")]
		public EntitySet<CT_KyThi> CT_KyThis
		{
			get
			{
				return this._CT_KyThis;
			}
			set
			{
				this._CT_KyThis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HOCSINH_KYTHIs(CT_HOCSINH_KYTHI entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = this;
		}
		
		private void detach_CT_HOCSINH_KYTHIs(CT_HOCSINH_KYTHI entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = null;
		}
		
		private void attach_CT_KyThis(CT_KyThi entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = this;
		}
		
		private void detach_CT_KyThis(CT_KyThi entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KyThiThu")]
	public partial class KyThiThu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKyThi;
		
		private string _TenKyThi;
		
		private System.DateTime _NgayBD;
		
		private System.DateTime _NgayKT;
		
		private EntitySet<CT_HOCSINH_KyThiThu> _CT_HOCSINH_KyThiThus;
		
		private EntitySet<CT_KyThiThu> _CT_KyThiThus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKyThiChanging(string value);
    partial void OnMaKyThiChanged();
    partial void OnTenKyThiChanging(string value);
    partial void OnTenKyThiChanged();
    partial void OnNgayBDChanging(System.DateTime value);
    partial void OnNgayBDChanged();
    partial void OnNgayKTChanging(System.DateTime value);
    partial void OnNgayKTChanged();
    #endregion
		
		public KyThiThu()
		{
			this._CT_HOCSINH_KyThiThus = new EntitySet<CT_HOCSINH_KyThiThu>(new Action<CT_HOCSINH_KyThiThu>(this.attach_CT_HOCSINH_KyThiThus), new Action<CT_HOCSINH_KyThiThu>(this.detach_CT_HOCSINH_KyThiThus));
			this._CT_KyThiThus = new EntitySet<CT_KyThiThu>(new Action<CT_KyThiThu>(this.attach_CT_KyThiThus), new Action<CT_KyThiThu>(this.detach_CT_KyThiThus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKyThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKyThi
		{
			get
			{
				return this._MaKyThi;
			}
			set
			{
				if ((this._MaKyThi != value))
				{
					this.OnMaKyThiChanging(value);
					this.SendPropertyChanging();
					this._MaKyThi = value;
					this.SendPropertyChanged("MaKyThi");
					this.OnMaKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKyThi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenKyThi
		{
			get
			{
				return this._TenKyThi;
			}
			set
			{
				if ((this._TenKyThi != value))
				{
					this.OnTenKyThiChanging(value);
					this.SendPropertyChanging();
					this._TenKyThi = value;
					this.SendPropertyChanged("TenKyThi");
					this.OnTenKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBD", DbType="Date NOT NULL")]
		public System.DateTime NgayBD
		{
			get
			{
				return this._NgayBD;
			}
			set
			{
				if ((this._NgayBD != value))
				{
					this.OnNgayBDChanging(value);
					this.SendPropertyChanging();
					this._NgayBD = value;
					this.SendPropertyChanged("NgayBD");
					this.OnNgayBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKT", DbType="Date NOT NULL")]
		public System.DateTime NgayKT
		{
			get
			{
				return this._NgayKT;
			}
			set
			{
				if ((this._NgayKT != value))
				{
					this.OnNgayKTChanging(value);
					this.SendPropertyChanging();
					this._NgayKT = value;
					this.SendPropertyChanged("NgayKT");
					this.OnNgayKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThiThu_CT_HOCSINH_KyThiThu", Storage="_CT_HOCSINH_KyThiThus", ThisKey="MaKyThi", OtherKey="MaKyThi")]
		public EntitySet<CT_HOCSINH_KyThiThu> CT_HOCSINH_KyThiThus
		{
			get
			{
				return this._CT_HOCSINH_KyThiThus;
			}
			set
			{
				this._CT_HOCSINH_KyThiThus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThiThu_CT_KyThiThu", Storage="_CT_KyThiThus", ThisKey="MaKyThi", OtherKey="MaKyThi")]
		public EntitySet<CT_KyThiThu> CT_KyThiThus
		{
			get
			{
				return this._CT_KyThiThus;
			}
			set
			{
				this._CT_KyThiThus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HOCSINH_KyThiThus(CT_HOCSINH_KyThiThu entity)
		{
			this.SendPropertyChanging();
			entity.KyThiThu = this;
		}
		
		private void detach_CT_HOCSINH_KyThiThus(CT_HOCSINH_KyThiThu entity)
		{
			this.SendPropertyChanging();
			entity.KyThiThu = null;
		}
		
		private void attach_CT_KyThiThus(CT_KyThiThu entity)
		{
			this.SendPropertyChanging();
			entity.KyThiThu = this;
		}
		
		private void detach_CT_KyThiThus(CT_KyThiThu entity)
		{
			this.SendPropertyChanging();
			entity.KyThiThu = null;
		}
	}
}
#pragma warning restore 1591
